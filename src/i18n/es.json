{
    "see_step_by_step": "Paso a paso:",

    "home_button_dark_mode": "Modo Oscuro",
    "dark_mode_title": "Modo Oscuro",
    "dark_mode_text_explain_concept": "El Modo Oscuro es una opci√≥n de tema oscuro para interfaces, que reduce el brillo de la pantalla, mejora la legibilidad en ambientes con poca luz y disminuye la fatiga visual. Adem√°s, aporta un aspecto moderno a la aplicaci√≥n.",
    "dark_mode_text_explain_create": "Para aplicar el Modo Oscuro con styled-components, creamos dos temas (claro y oscuro) y alternamos entre ellos usando el ThemeProvider. Los colores se acceden directamente en los componentes a trav√©s de las props del tema.\n El modo oscuro puede activarse manualmente (con un bot√≥n) y el estado puede guardarse en el localStorage para persistir entre sesiones.",
    "dark_mode_step_1": "1. Define los temas claro y oscuro",
    "dark_mode_step_2": "2. Crea el GlobalStyle con styled-components",
    "dark_mode_step_3": "3. Envuelve tu aplicaci√≥n con ThemeProvider",
    "dark_mode_step_4": "4. Controla el tema con useState y localStorage",
    "dark_mode_step_5": "5. Crea el bot√≥n de cambio de tema",

    "home_button_translate": "Internacionalizaci√≥n (i18n)",
    "translation_title": "Internacionalizaci√≥n (i18n)",
    "translation_text_explain_concept": "La internacionalizaci√≥n (o i18n) es el proceso de preparar una aplicaci√≥n para soportar m√∫ltiples idiomas, permitiendo que el contenido sea traducido din√°micamente seg√∫n la preferencia del usuario.",
    "translation_text_explain_create": "Para aplicar la internacionalizaci√≥n con react-i18next, creamos archivos de traducci√≥n separados por idioma y configuramos i18n para registrar estos recursos. Los textos de la interfaz se acceden mediante claves con la funci√≥n t(), que devuelve la traducci√≥n seg√∫n el idioma actual. El cambio de idioma puede hacerse manualmente (con un bot√≥n o selector), y la elecci√≥n del usuario puede guardarse en localStorage para persistir entre sesiones.",
    "translation_step_1": "1. Instala las dependencias",
    "translation_step_2": "2. Crea los archivos de traducci√≥n",
    "translation_step_3": "3. Configura i18n",
    "translation_step_4": "4. Importa i18n al inicio de la aplicaci√≥n",
    "translation_step_5": "5. Usa el hook useTranslation",
    "translation_step_6": "6. Cambia el idioma din√°micamente",

    "home_button_sentry": "Sentry",
    "sentry_title": "Sentry",
    "sentry_text_explain_concept": "Sentry es una herramienta de monitoreo de errores en tiempo real, que permite identificar fallos en la aplicaci√≥n de forma r√°pida y eficiente. Registra detalles sobre los errores, como d√≥nde ocurrieron y qu√© los caus√≥, ayudando a los desarrolladores a corregir problemas m√°s r√°pidamente.",
    "sentry_text_explain_create": "Para implementar Sentry en una aplicaci√≥n React, es necesario instalar las bibliotecas @sentry/react y @sentry/tracing, y configurar el monitoreo en el punto de entrada de la aplicaci√≥n utilizando la funci√≥n Sentry.init(). El DSN proporcionado por el panel de Sentry conecta la aplicaci√≥n con el proyecto de monitoreo. Tambi√©n es posible envolver los componentes con ErrorBoundary para capturar errores de la interfaz. As√≠, los fallos se registran autom√°ticamente, permitiendo un an√°lisis detallado y correcciones m√°s r√°pidas.",
    "sentry_step_1": "1. Crea una cuenta e inicia un proyecto en https://sentry.io",
    "sentry_step_2": "2. Instala la dependencia",
    "sentry_step_3": "3. Inicializa Sentry (al inicio de la aplicaci√≥n, como en index.js)",
    "sentry_step_4": "4. Prueba forzando un error (en cualquier parte del c√≥digo)",
    "sentry_step_5": "5. Captura de pantalla del panel de Sentry",

    "home_button_snippets": "Snippets \n(react-syntax-highlighter)",
    "snippets_title": "Snippets \n(react-syntax-highlighter)",
    "snippets_text_explain_concept": "react-syntax-highlighter es una biblioteca que permite mostrar fragmentos de c√≥digo con resaltado de sintaxis directamente en aplicaciones React. Soporta varios lenguajes y temas visuales, facilitando la lectura y comprensi√≥n del c√≥digo. Es ideal para aplicaciones centradas en documentaci√≥n, ense√±anza o compartici√≥n de snippets de forma organizada y estilizada.",
    "snippets_text_explain_create": "Para implementar react-syntax-highlighter, basta con instalar la biblioteca e importar el componente deseado con el tema y el lenguaje de resaltado. El c√≥digo se pasa como contenido dentro del componente, y el aspecto se personaliza seg√∫n el tema elegido. Tambi√©n es posible aplicar estilos personalizados o cambiar el tema din√°micamente, seg√∫n la interfaz de la aplicaci√≥n.",
    "snippets_step_1": "1. Instalaci√≥n de la biblioteca",
    "snippets_step_2": "2. Importaci√≥n del componente y tema",
    "snippets_step_3": "3. Mostrar el c√≥digo",
    "snippets_step_4": "4. Opciones adicionales (opcional)",

    "home_button_fields_examples": "Lista de Componentes",
    "fields_examples_title": "Lista de Componentes",

    "home_button_status_code": "C√≥digos de Estado HTTP",
    "status_code_title": "C√≥digos de Estado HTTP",
    "status_code_subtitle": "Referencia r√°pida de los principales c√≥digos de respuesta HTTP",

    "status_code_1xx": "‚ñ∂Ô∏è 1xx - Informativos",
    "status_code_title_100": "100 Continue",
    "status_code_text_100": "El servidor recibi√≥ el inicio de la solicitud, contin√∫e enviando el resto.",
    "status_code_title_101": "101 Switching Protocols",
    "status_code_text_101": "El servidor acept√≥ cambiar de protocolo.",

    "status_code_2xx": "‚úÖ 2xx - √âxito",
    "status_code_title_200": "200 OK",
    "status_code_text_200": "Solicitud exitosa.",
    "status_code_title_201": "201 Created",
    "status_code_text_201": "Recurso creado con √©xito.",
    "status_code_title_204": "204 No Content",
    "status_code_text_204": "Solicitud exitosa, pero sin contenido en el cuerpo de la respuesta.",

    "status_code_3xx": "üîÄ 3xx - Redirecci√≥n",
    "status_code_title_301": "301 Moved Permanently",
    "status_code_text_301": "Recurso movido permanentemente.",
    "status_code_title_302": "302 Found",
    "status_code_text_302": "Redirecci√≥n temporal.",
    "status_code_title_304": "304 Not Modified",
    "status_code_text_304": "El recurso no se ha modificado desde la √∫ltima solicitud.",

    "status_code_4xx": "‚ö†Ô∏è 4xx - Errores del Cliente",
    "status_code_title_400": "400 Bad Request",
    "status_code_text_400": "La solicitud est√° malformada.",
    "status_code_title_401": "401 Unauthorized",
    "status_code_text_401": "Falta autenticaci√≥n.",
    "status_code_title_403": "403 Forbidden",
    "status_code_text_403": "Autenticado, pero sin permiso.",
    "status_code_title_404": "404 Not Found",
    "status_code_text_404": "Recurso no encontrado.",
    "status_code_title_429": "429 Too Many Requests",
    "status_code_text_429": "L√≠mite de solicitudes excedido.",

    "status_code_5xx": "‚ùå 5xx - Errores del Servidor",
    "status_code_title_500": "500 Internal Server Error",
    "status_code_text_500": "Error inesperado del servidor.",
    "status_code_title_502": "502 Bad Gateway",
    "status_code_text_502": "El gateway/proxy recibi√≥ una respuesta inv√°lida.",
    "status_code_title_503": "503 Service Unavailable",
    "status_code_text_503": "Servidor temporalmente no disponible.",

    "home_button_ant_design": "Ant Design"
}
